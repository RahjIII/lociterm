------- TODO for 2.1 release --------------
* FIX why isn't ssl working??  - omg its because its broken in libwebsockets v4.3-stable.  And permessage deflate is broken in v4.4/main .  Add a compile time option to disable PMD temporarily?

* implement the GMCP Loci.Menu protocol for game sending menu definitions to client

* local mode function key editor.

* screenshots for PWA installer

		------- more TODO TODO TODO TODO --------------
* ICK. - the nerfbar password hider probably needs to be an <input
  type="password"> field instead of a blurred <textarea>.  On Android with a
  styled textarea, the IME will still show the password you type in as an
  autocompletion. *doh!* :) But its good enough for now.

* comments around some of the nastier code bits, particularly the crummy js.

* controlable contrast ratio in theme? (can xtermjs do it after setup?)  
  See xtermoptions.minimumContrastRatio.  (The problem is games with direct 256
  or TRUECOLOR that just choose horrible colors from a usability standpoint.
  #008000 blue on #000000 black, for example.)

* General save settings per site?

* Would be cool if the function keys "animated" on screen when they changed via
	loci.hotkey, so that the player is more aware of it. (I made a hook, but the indicator of flashing open the menu sucks and needs workd.)

* It might be cool to have the screen stay at a fixed width (from font size),
	but also be able to do a pinch zoom and only have the term panel effected,
	not the ui buttons.  so not pinch zoom of whole app, but just the xterm
	pane.

* Add a "you have login creds here" icon to the games list.

* Add an About->Conennection window, to show connection time, i/o stats, and
  maybe operating parameters like telnet and gmcp negotiations.

* Add a db state DBSTATUS_TEST_SERVER that allows connections, but does not get
  shown in the list.  (and a way to set it from the CLI.)

* Think about a GMCP Loci.Font protocol for d/l'in and using a private EUA font set?

* check security_enforcement(), should it be using shutdown_game() instead?

* Should have the systemctl file built at make time, to use the right install
	 path.

* change the "Diagonal" menu back to LPMud.  Make the "canned" menus
	auto-select based on the MSSP family name?

* config option for verbose suggestion failure message to client.

* DB - save first few K of data, for admin review later?

* Figure out how to alter the tables without whacking them.

* Config option for how frequently to re-check MSSP.

* try to fix TAB and SHIFT TAB in the ui.

* Filter out unsupported GMCP messages at the locid level.  No reason to send
  those to the client, and some games are very bad about it.

* idea- could do a pure cli lociterm too, for kicks. :)

* There is a bug in libwebsockets, if ip6 hostname resolves but port only open
  on ipv4, lws will kill the connection 15 seconds after connecting to ipv4.

* Server Get the terminal types and mtts values to be selectable from the
  config file?

* android ime-
	Remains an open issue. :( 
	See: https://github.com/xtermjs/xterm.js/pull/4265
	see ./browser/input/CompositionHelper.ts

* Server lws_daemonize check that.

* Server drop perms after launch?

------------- DONE! -----------------
+ EOR hook.

+ add COLORTERM = truecolor to environment.

+ propigate the client interface state into new-env.
	Done as CLIENT_STATE.  Values are UP or DOWN, and are sent on change and on
	reconnect.

- lociterm... talking to Play.Legendsofterris.Com 31000, got a lot of what
	looked like oob gmcp?  figure that out.  ( I looked at a packet trace... its not Lociterm.  That mud is just sending garbage. )

+ there are times when you might want to allow a numeric ip. make it
  selectable.  (gamedb, allow_numeric_ip = yes)  default is no

+ make it so that ?host=X&port=Y ONLY works if the game has already been
  suggested and allowed, to make it LESS easy to automate suggestions.

+ Have UI disable "game server" when no db engine is installed. 
	No, I had it only print the default game.

+ Have UI disable "suggest new" button when suggestions are disabled.
	the suggest new button in the game server list.  If a menu opens
	sys_connect directly, that'll still work.

+ change prompt menu action to print into the nerfbar if active.  send
  should send the nerfbar of the nerfbar (if any) without a newline then the
  send string.

+ the password entry field probably doesn't blank the nerfbar while in line
	mode, but it should.  It does now, but only for true line-mode hidden
	password mode clients.  char-at-a-time with local line mode enabled won't
	normally be able to enable password hiding.

+ have the menside buttons position north of the nerfbar if nb is open

+ Document the menu name in sys_menu that are always available, and maybe rename them from menu_ to sysmenu_  or something like that.

+ implement a 'word click' stack function to integrate into menus, to speed up
  select/paste from words on the screen.

+ work on when nerfbar input gets autofocused.  (maybe less of that.) I feel
  like it is working pretty well now.

* FIX hotkey routing though nerfbar.  (it shouldn't!)

+ document the locid command line functions for DB managment including redatction

- create a "player.locid.conf" file suggestion for ~/.locid.conf

- BUG - is there some race condtition, or message fragmentation problem wrt
	gmcp/env data making its way into the in-band datastream?  Is client GMCP
	buffered correctly? (No, I don't think so.  I believe I was seeing was LO
	improperly inserting system notifications into the GMCP data stream)

+ work on cleaning up for home-dir install, so that locid -b works as a
 one-shot local launch without having to specify a -c config file.  (.lociterm
 dotfiles?)

- make a "this is a dev server" flag in the suggest window, that keeps the
  server from SHOWING in the global list.  (I didn't make it "user selectable",
  but I did add an adminstrative flag for it, DBSTATUS_REDACTED, to keep
  certain hosts from showing up in the public offerings.)

+ clean up the menu format keywords and document them.

+ add img format to menus.

+ Make the menu selection save.  Per site?
	Saved, but not per site.  Decided to do it the easy way for now, and
	re-archetect the whole theme saving thing later.

+ Work on selectable / alternate menubox layouts for 10-way direction muds.
	(in-game menu themes first.  Then maybe game provided ones.)

+ When you do menus, do a &menu=lp or whatever.  That'd be nice.

+ One time 'suggestion disclaimer' window.

+ have login window save creds based on host/port.

+ theme setting for adding some spacing around the terminal div, so letters
	aren't right up against the edge.  (no.  I did a justify-content on one of
	the divs to center the terminal element)

+ change the URL connect format so that it overrides the users saved game
	choice... or at least pops up a window about it.

+ Do a "lociterm supports" features writeup, maybe in .md format?
		UTF-8, Unicode, Emoji support
		XTerm compatible, True Color, 256 Color
		Telnet Char-at-a-time, linemode.  EOR TTYPE MCCP MTTS MSSP NAWS GMCP
		GMCP Char.login Loci.hotkey
		Themes - font size, button size, CRT emulation filters, menu locations
		Accesibility - screen reader hinting
		Touch screen support
		Installable as Progressive Web App
		Mobile support, speech to text on mobile

+ put SSL port into the game about.

- idea- support for CHARSET telnet option, to send UTF-8. (Eh, maybe only do it
  later if we bother to support other codepages.)

+ CLI db administration mode.

+ There needs to be an idle timer on proxy connection, to stop game side being
  alive for ever waiting for a reconnect that wont come.

+ could also add a throughput/interface bytes tracker too I suppose. iostat from LO

+ clean up the lociclient protocol numbers.
	Also added a client/server HELLO exchange to detect when client version may
	not match server version.

+ check upgrade path for clients lociterm1.0->lociterm2.0.
	Well... the new server will detect lociterm.1.x and at least send a "You
	must refresh the page" down to the user.  Hopefully they will be able to.

+ terminal reset- put cursor on last line of screen? (read rows from xtermjs, move cursor there.)

+ see about ?host=x;port=x;ssl=x in URL.  Done, used as initial game connection, ignored otherwise.

+ have login window send via in-band again, if GMCP.Char is unavailable.

+ Suggested games and result should always be logged by server (not a debug)

+ put some color in the terminal icon

+ negotiate EOR.  Its just a good thing to do.

+ BUG - game about sometimes doesnt show the right game right after a suggestion

+ BUG - game server seclect sometimes dosent show the right green-checked game after a suggestsion or a reload.

? BUG - client send terminal name sometimes???

+ use open method to set the fields in the suggest host window

+ make the GMCP login icon show the game icon if it exists.

+ BUG - changing theme to one without line mode turns it off on line mode clients.

- button paste command should also past into command history?  Meh..

* Change the version numbers, make them consisted between client and server.

* nerfbar needs (local?) up and down arrrow history.

* Choose-a-server needs client interface.  Client needs to save the chosen server.

*** reconnect bug, telnet is getting reset

* local echo mode might want to preferentially focus() (and enable?) the nerfbar.

* Server should tell client about need for local echo?  Server should provide 'local' echo?

* Suggestions into DB.

* Connect check against db.

* MSSP data into DB on connect.

* security checks into config file for suggest-a-game.  none,telnet,mud,mssp

* security checks working

* get sqlite linked in

* figure out libtelnet mssp handling.

* Server fix the locid_log function to work better at showing the connection the messages are for.

* Makefile - have make move the existing locid to locid.prev on install to avoid the text file busy problem.

- Client option for keep keyboard open?
	I just can't find any such option in Android. :(

* Enabled and tested MCCP2 game side compression.

* Enabled and tested client side permessage deflate compression.

* Server Optional- game security ssl isn't working, fix it.

* Makefile add a "tar up the distro" method to top level make?

* client - work on the nerfbar some more.  A local line mode editor would be a
 nice thing to have for some games other than LO.

* Makefile add a better "install me" option to make

* client get the manifest working

* Get the client version strings to work.  You can set 'em in version.h and package.json for server and client.

* Enable Unicode 11 support via xterm-addon-unicode11

* client theme selector moved to prefs window.

- client - keep the gear from fading out.
	Meh, could maybe do that later.

* Client make the "about" menu item show credits.

* client - touch fade option into settings.

* Server systemd/sysv launcher script?

* server - parse the x-forwared-for header so that transparent proxy through
 apache will work.

* Server get it working through apache ws proxy.

* favicon seems to be working.

* FIX the baudbug with split utf8 sequences.

* Server Get the connection endpoint to be selectable from the config file.

* S Get https: and wss: working!

* Fix the 'missing return key' bug.

* C adjust the lociterm applytheme to be able to re-style the normal css stuff.

* C configurable client element and text sizes.

* Client  locally saved (on browser) prefs

* Client Get the old login window working.

* configurable client themes/colors into menuside code too.

+ configurable client themes/colors 

+ Figure out the "rendering before fonts loaded" thing.

+ Get the intial styling of the client worked out better.

+ Create a top level makefile to build a packageable dist of client and server.

+ add in 'the usual' license credits and readme's

+ Get it into cvs.

+ clean up file headers for initial checkin.

+ Get NEW-ENVIRON working to support MNES standard variables
	report IPADDRESS
	CHARSET
	CLIENT_NAME
	CLIENT_VERSION
	MTTS
	TERMINAL_TYPE

- Check on charset support.? Naw...  LO handles the env var correctly.

- Check on eor support. meh not really needed for LO.

- Plumb the login window to use env vars instead? (Added GMCP!)
